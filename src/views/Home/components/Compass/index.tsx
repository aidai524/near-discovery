import { useSize } from 'ahooks';
import Image from 'next/image';
import { useRouter } from 'next/router';
import { memo, useRef } from 'react';
import { Autoplay } from 'swiper/modules';
import { Swiper, SwiperSlide } from 'swiper/react';
import CompassIcon from '@/components/Icons/Compass';
import Loading from '@/components/Icons/Loading';
import odyssey from '@/config/odyssey';
import useAuthCheck from '@/hooks/useAuthCheck';
import useToast from '@/hooks/useToast';
import { StyledFlex, StyledFont, StyledSvg } from '@/styled/styles';
import Tag from '@/views/Odyssey/components/Tag';
import useCompassList from './hooks/useCompassList';
import {
  StyledCard,
  StyledCardBackgroundImage,
  StyledCardButton,
  StyledCardDesc,
  StyledCardMainContent,
  StyledCardTitle,
  StyledChainsImg,
  StyledCominsoon,
  StyledCompassIcon,
  StyledContainer,
  StyledContent,
  StyledInner,
  StyledLoadingWrapper,
  StyledRadialBg,
  StyledRadialBg2,
  StyledSwiperNextButton,
  StyledSwiperPrevButton,
  StyledSwiperWrapper,
} from './styles';

const iconRight = (
  <svg xmlns="http://www.w3.org/2000/svg" width="13" height="38" viewBox="0 0 13 38" fill="none">
    <path d="M1 1L11 19L1 37" stroke="#979ABE" strokeWidth="2" strokeLinecap="round" />
  </svg>
);
const Card = function ({ compass }: any) {
  const toast = useToast();
  const router = useRouter();
  const { check } = useAuthCheck({ isNeedAk: true });
  const handleExplore = async function () {
    if (compass.status === 'un_start') {
      toast.fail({
        title: 'Odyssey is upcoming...',
      });
      return;
    }
    if (!odyssey[compass.id]) return;
    router.push(odyssey[compass.id].path);
  };

  return (
    <StyledCard>
      <StyledCardBackgroundImage
        width={646}
        height={323}
        src={compass.banner}
        alt={compass.name}
        style={{
          filter: compass.status === 'ended' ? 'grayscale(100%)' : 'grayscale(0%)',
        }}
      />
      <StyledCardMainContent>
        <StyledFlex alignItems="center" gap="12px">
          {odyssey[compass.id]?.chainsImg && (
            <StyledChainsImg
              src={odyssey[compass.id]?.chainsImg}
              style={{ height: odyssey[compass.id]?.chainsHeight }}
            />
          )}
          <Tag status={compass.status} />
        </StyledFlex>
        <StyledCardTitle>{compass.name}</StyledCardTitle>
        <StyledCardDesc>{compass.description}</StyledCardDesc>
      </StyledCardMainContent>
      {compass.status === 'un_start' ? (
        <StyledCominsoon>Coming soon...</StyledCominsoon>
      ) : (
        <StyledCardButton
          onClick={() => {
            check(handleExplore);
          }}
          data-bp="1001-003"
        >
          <div>Explore now</div>
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="12" viewBox="0 0 18 12" fill="none">
            <path
              d="M1 5.2C0.558172 5.2 0.2 5.55817 0.2 6C0.2 6.44183 0.558172 6.8 1 6.8L1 5.2ZM17.5657 6.56569C17.8781 6.25327 17.8781 5.74674 17.5657 5.43432L12.4745 0.343147C12.1621 0.0307274 11.6556 0.0307274 11.3431 0.343147C11.0307 0.655566 11.0307 1.1621 11.3431 1.47452L15.8686 6L11.3431 10.5255C11.0307 10.8379 11.0307 11.3444 11.3431 11.6569C11.6556 11.9693 12.1621 11.9693 12.4745 11.6569L17.5657 6.56569ZM1 6.8L17 6.8L17 5.2L1 5.2L1 6.8Z"
              fill="black"
            />
          </svg>
        </StyledCardButton>
      )}
    </StyledCard>
  );
};
const Compass = () => {
  const router = useRouter();
  const { check } = useAuthCheck({ isNeedAk: true });
  const size: any = useSize(window.document.getElementsByTagName('body')[0]);
  // const { loading, compassList } = useCompassList();
  const swiperRef = useRef<any>();

  return (
    <StyledContainer>
      <StyledContent>
        <StyledRadialBg />
        <StyledRadialBg2 />
        <StyledInner>
          <StyledFlex justifyContent="space-between" style={{ padding: '41px 0 30px' }}>
            <StyledFont color="#FFF" fontSize="36px" fontWeight="700" lineHeight="165%">
              New Launched
            </StyledFont>
          </StyledFlex>
          <StyledSwiperWrapper>
            <Swiper
              width={1244}
              modules={[Autoplay]}
              slidesPerView={1}
              autoplay={{ delay: 113000 }}
              speed={1000}
              spaceBetween={(size?.width - 1244) / 2 + 100}
              updateOnWindowResize={true}
              onSwiper={(swiper) => {
                swiperRef.current = swiper;
              }}
              loop={true}
            >
              <SwiperSlide>
                <StyledCard>
                  <StyledCardBackgroundImage
                    width={646}
                    height={323}
                    src="/launchpad_banner.png"
                    alt="launched"
                  />
                  <StyledCardMainContent>
                    <StyledFlex>
                      <StyledSvg>
                        <svg xmlns="http://www.w3.org/2000/svg" width="61" height="60" viewBox="0 0 61 60" fill="none">
                          <circle cx="30" cy="30" r="30" fill="black" />
                          <path fill-rule="evenodd" clip-rule="evenodd" d="M59.8796 27.0598C59.1934 21.1474 56.7369 15.5802 52.8324 11.0878C48.9276 6.59548 43.757 3.38755 37.9977 1.88445C42.9652 3.5091 47.3773 6.49455 50.7327 10.5016C54.0879 14.5086 56.252 19.3765 56.9789 24.5519C50.9353 19.6073 41.1612 14.9521 31.9425 17.8439C36.0009 21.5273 36.9639 26.1146 32.6603 30.0638C37.3508 22.2422 28.0227 18.7891 23.3557 15.1943C19.5866 12.2878 21.8463 8.69594 24.7559 6.1793C27.9489 3.41453 32.6838 1.63927 36.2076 1.4532C29.5263 0.186009 19.4389 1.50046 14.5887 6.35652C9.73858 11.2126 13.1118 17.8764 19.0195 23.2376C19.0195 23.2376 11.5404 30.3475 7.22784 35.5225C2.91527 40.6976 12.9051 48.2445 12.9051 48.2445C24.4899 39.6785 33.4134 46.7175 37.7172 55.0826C33.1414 56.5207 28.2728 56.7569 23.5796 55.7686C18.8862 54.7807 14.5261 52.6013 10.9187 49.4405C7.31139 46.2797 4.57811 42.2436 2.98192 37.7208C1.38572 33.198 0.980289 28.3406 1.80463 23.6156C0.804644 27.8118 0.735873 32.1763 1.60315 36.4018C2.47043 40.6273 4.25273 44.6117 6.82473 48.075C9.39671 51.538 12.696 54.3957 16.4907 56.4471C20.2854 58.4987 24.4832 59.694 28.7895 59.9494C33.0956 60.2049 37.4054 59.5139 41.416 57.9254C45.4266 56.3368 49.0405 53.8891 52.0036 50.7542C54.9669 47.6193 57.2078 43.8736 58.5684 39.78C59.929 35.6867 60.3766 31.3449 59.8796 27.0598ZM19.8997 29.5764L15.7644 29.2812L22.053 23.7131L19.8997 29.5764Z" fill="url(#paint0_linear_16495_2957)" />
                          <path d="M7.48847 17.1636C7.48847 24.1455 12.8643 24 16.0002 24.1455L8.3845 32C6.74189 31.8545 3.57533 31.1273 2.50016 24.1455C1.42499 17.1636 7.93654 10.0364 11.5204 8C10.4751 8.87273 8.20525 11.9273 7.48847 17.1636Z" fill="url(#paint1_linear_16495_2957)" />
                          <defs>
                            <linearGradient id="paint0_linear_16495_2957" x1="1" y1="6.5" x2="52" y2="34" gradientUnits="userSpaceOnUse">
                              <stop stop-color="#70FFDE" />
                              <stop offset="1" stop-color="#9852FF" />
                            </linearGradient>
                            <linearGradient id="paint1_linear_16495_2957" x1="2" y1="8" x2="14.5126" y2="10.057" gradientUnits="userSpaceOnUse">
                              <stop stop-color="#70FFDE" />
                              <stop offset="1" stop-color="#9852FF" />
                            </linearGradient>
                          </defs>
                        </svg>
                      </StyledSvg>
                    </StyledFlex>
                    <StyledCardTitle style={{ marginTop: 19, marginBottom: 16 }}>$RAGE Launched!</StyledCardTitle>
                    <StyledCardDesc>Join Fjord&apos;s Rage Trade Token Sale via DapDap and Win Exclusive Rewards!</StyledCardDesc>
                  </StyledCardMainContent>
                  <StyledCardButton
                    onClick={() => {
                      check(() => {
                        router.push("/stake/fjord")
                      });
                    }}
                    data-bp="1001-003"
                  >
                    <div>Buy now</div>
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="12" viewBox="0 0 18 12" fill="none">
                      <path
                        d="M1 5.2C0.558172 5.2 0.2 5.55817 0.2 6C0.2 6.44183 0.558172 6.8 1 6.8L1 5.2ZM17.5657 6.56569C17.8781 6.25327 17.8781 5.74674 17.5657 5.43432L12.4745 0.343147C12.1621 0.0307274 11.6556 0.0307274 11.3431 0.343147C11.0307 0.655566 11.0307 1.1621 11.3431 1.47452L15.8686 6L11.3431 10.5255C11.0307 10.8379 11.0307 11.3444 11.3431 11.6569C11.6556 11.9693 12.1621 11.9693 12.4745 11.6569L17.5657 6.56569ZM1 6.8L17 6.8L17 5.2L1 5.2L1 6.8Z"
                        fill="black"
                      />
                    </svg>
                  </StyledCardButton>
                </StyledCard>
                <StyledCompassIcon style={{ right: -11, top: -4 }}>
                  <svg width="111" height="111" viewBox="0 0 111 111" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M53.5454 1.67862C54.6696 0.713136 56.3304 0.713135 57.4546 1.67862L65.6396 8.70805C66.3628 9.32916 67.3382 9.56956 68.2672 9.35569L78.7814 6.9352C80.2255 6.60275 81.696 7.37453 82.2427 8.75187L86.2234 18.7799C86.5752 19.6659 87.3271 20.3321 88.2491 20.5744L98.6838 23.3174C100.117 23.6941 101.06 25.0609 100.904 26.5346L99.769 37.2638C99.6686 38.2119 100.025 39.1511 100.729 39.7942L108.693 47.0722C109.787 48.0719 109.987 49.7205 109.165 50.9529L103.173 59.9255C102.644 60.7183 102.522 61.7155 102.847 62.612L106.517 72.7578C107.021 74.1513 106.432 75.7041 105.131 76.4129L95.6557 81.5733C94.8185 82.0293 94.2478 82.856 94.1184 83.8005L92.6532 94.4898C92.452 95.9579 91.2089 97.0592 89.7272 97.082L78.9392 97.2481C77.986 97.2627 77.0965 97.7296 76.543 98.5057L70.2781 107.29C69.4176 108.496 67.8051 108.894 66.4825 108.225L56.8531 103.359C56.0023 102.929 54.9977 102.929 54.1469 103.359L44.5175 108.225C43.1949 108.894 41.5824 108.496 40.7219 107.29L34.457 98.5057C33.9035 97.7296 33.014 97.2627 32.0608 97.2481L21.2728 97.082C19.7911 97.0592 18.548 95.9579 18.3468 94.4898L16.8816 83.8005C16.7522 82.856 16.1815 82.0293 15.3443 81.5733L5.86924 76.4129C4.56784 75.7041 3.97894 74.1513 4.48304 72.7578L8.15322 62.612C8.47752 61.7155 8.35643 60.7183 7.82702 59.9255L1.83545 50.9529C1.01251 49.7205 1.21268 48.0719 2.30664 47.0722L10.2714 39.7942C10.9752 39.1511 11.3314 38.2119 11.231 37.2638L10.0956 26.5346C9.93959 25.0609 10.883 23.6941 12.3162 23.3174L22.7509 20.5744C23.6729 20.3321 24.4248 19.6659 24.7766 18.7799L28.7573 8.75187C29.304 7.37453 30.7745 6.60275 32.2186 6.9352L42.7328 9.35569C43.6618 9.56956 44.6372 9.32916 45.3604 8.70805L53.5454 1.67862Z" fill="#BC9BFF" />
                    <path d="M54.1969 9.43725C54.9464 8.79359 56.0536 8.79359 56.803 9.43725L63.5641 15.2438C64.5284 16.0719 65.8289 16.3925 67.0676 16.1073L75.7526 14.1079C76.7154 13.8863 77.6957 14.4008 78.0602 15.319L81.3484 23.6025C81.8174 24.7839 82.82 25.6721 84.0493 25.9952L92.6687 28.261C93.6242 28.5121 94.2531 29.4233 94.1491 30.4058L93.2112 39.2685C93.0774 40.5325 93.5524 41.7849 94.4907 42.6423L101.07 48.6542C101.799 49.3206 101.933 50.4197 101.384 51.2413L96.4347 58.653C95.7289 59.71 95.5674 61.0397 95.9998 62.235L99.0315 70.6157C99.3676 71.5447 98.9749 72.5799 98.1074 73.0524L90.2806 77.3151C89.1644 77.9231 88.4035 79.0254 88.2309 80.2847L87.0206 89.1144C86.8864 90.0932 86.0577 90.8273 85.0699 90.8426L76.1587 90.9797C74.8878 90.9993 73.7018 91.6217 72.9637 92.6566L67.7887 99.9124C67.2151 100.717 66.1401 100.982 65.2584 100.536L57.3042 96.5163C56.1697 95.943 54.8303 95.943 53.6958 96.5163L45.7416 100.536C44.8599 100.982 43.7849 100.717 43.2113 99.9124L38.0363 92.6566C37.2982 91.6217 36.1122 90.9993 34.8413 90.9797L25.9301 90.8426C24.9423 90.8273 24.1136 90.0932 23.9794 89.1144L22.7691 80.2847C22.5965 79.0254 21.8356 77.9231 20.7194 77.3151L12.8926 73.0524C12.025 72.5799 11.6324 71.5447 11.9685 70.6157L15.0002 62.235C15.4326 61.0397 15.2711 59.71 14.5653 58.653L9.61604 51.2413C9.06741 50.4197 9.20086 49.3206 9.93016 48.6542L16.5093 42.6423C17.4477 41.7849 17.9226 40.5325 17.7888 39.2685L16.8509 30.4058C16.7469 29.4233 17.3758 28.5121 18.3313 28.261L26.9507 25.9952C28.18 25.6721 29.1826 24.7839 29.6516 23.6025L32.9398 15.319C33.3043 14.4008 34.2846 13.8863 35.2474 14.1079L43.9324 16.1073C45.1711 16.3925 46.4716 16.0719 47.4359 15.2438L54.1969 9.43725Z" stroke="black" stroke-width="2" />
                    <path d="M26.886 35.3604L31.4433 34.1393L31.8998 35.8432L27.3426 37.0643L26.886 35.3604ZM28.0919 39.2115L33.2441 37.831L33.7152 39.589L26.3857 41.5529L23.8493 32.0868L31.0029 30.17L31.474 31.928L26.4975 33.2614L28.0919 39.2115ZM34.284 39.4366L36.8506 32.7339L37.2782 34.3296L31.9233 29.9234L34.4116 29.2567L38.1208 32.3355L37.0832 32.6281L38.7119 28.1044L41.0919 27.4667L38.6592 33.8581L38.2389 32.2894L43.8582 36.8711L41.3294 37.5487L37.4675 34.2789L38.4682 34.0107L36.7992 38.7626L34.284 39.4366ZM46.5709 36.1443L44.5127 28.4633L41.4836 29.2749L41.0053 27.4899L49.2543 25.2796L49.7326 27.0646L46.7034 27.8763L48.7616 35.5573L46.5709 36.1443ZM52.9694 34.4298L50.433 24.9637L54.5305 23.8658C55.3779 23.6388 56.1456 23.5828 56.8335 23.698C57.519 23.8042 58.0974 24.0696 58.5687 24.4941C59.0399 24.9186 59.371 25.4869 59.5618 26.1991C59.7502 26.9023 59.7465 27.5555 59.5506 28.1588C59.3523 28.753 58.9829 29.2675 58.4423 29.7022C57.9018 30.137 57.2078 30.4679 56.3603 30.6949L53.4799 31.4667L54.1963 30.2457L55.1601 33.8428L52.9694 34.4298ZM58.9871 32.8174L55.7003 30.0166L58.0397 29.3898L61.3537 32.1833L58.9871 32.8174ZM54.2615 30.4891L53.0125 29.7223L55.7712 28.9831C56.4473 28.8019 56.9135 28.5224 57.1698 28.1445C57.4236 27.7576 57.4817 27.3072 57.344 26.7934C57.2039 26.2705 56.9284 25.9095 56.5176 25.7104C56.1067 25.5113 55.5632 25.5023 54.8871 25.6835L52.1284 26.4227L52.823 25.1205L54.2615 30.4891ZM61.6694 32.0986L63.3522 21.5021L65.5159 20.9223L72.285 29.2542L69.9861 29.8702L64.2849 22.4406L65.1504 22.2087L63.9143 31.4972L61.6694 32.0986ZM63.2355 29.5049L63.3713 27.6858L68.2396 26.3814L69.2803 27.8853L63.2355 29.5049Z" fill="black" />
                    <path d="M20.4468 58.6933L17.9104 49.2273L22.0078 48.1294C22.8553 47.9023 23.6229 47.8464 24.3109 47.9616C24.9964 48.0678 25.5748 48.3331 26.046 48.7576C26.5173 49.1821 26.8483 49.7504 27.0392 50.4626C27.2276 51.1658 27.2238 51.8191 27.028 52.4223C26.8297 53.0166 26.4603 53.531 25.9197 53.9658C25.3791 54.4005 24.6851 54.7314 23.8377 54.9584L20.9573 55.7302L21.6737 54.5092L22.6375 58.1063L20.4468 58.6933ZM26.4645 57.0809L23.1776 54.2802L25.5171 53.6533L28.831 56.4468L26.4645 57.0809ZM21.7389 54.7526L20.4898 53.9858L23.2485 53.2466C23.9247 53.0654 24.3909 52.7859 24.6472 52.408C24.901 52.0211 24.9591 51.5708 24.8214 51.0569C24.6813 50.534 24.4058 50.173 23.9949 49.9739C23.5841 49.7748 23.0406 49.7658 22.3644 49.947L19.6057 50.6862L20.3004 49.384L21.7389 54.7526ZM30.8912 49.8363L35.4485 48.6152L35.905 50.3191L31.3478 51.5402L30.8912 49.8363ZM32.0971 53.6874L37.2493 52.3069L37.7204 54.0649L30.3909 56.0288L27.8545 46.5627L35.0081 44.6459L35.4792 46.4039L30.5027 47.7373L32.0971 53.6874ZM41.6032 53.0245L35.9701 44.3882L38.2419 43.7794L43.1795 51.4426L42.0436 51.747L42.6098 42.6091L44.6383 42.0655L49.5894 49.7251L48.4941 50.0186L49.0062 40.8952L51.1023 40.3335L50.5419 50.6294L48.1889 51.2598L43.8242 44.5447L44.4463 44.378L43.9562 52.394L41.6032 53.0245ZM53.3006 49.8902L54.9833 39.2936L57.147 38.7138L63.9161 47.0458L61.6172 47.6617L55.916 40.2322L56.7815 40.0003L55.5454 49.2887L53.3006 49.8902ZM54.8667 47.2965L55.0025 45.4773L59.8707 44.1729L60.9114 45.6768L54.8667 47.2965ZM64.8982 46.7826L62.3618 37.3165L66.4593 36.2186C67.3067 35.9915 68.0744 35.9356 68.7623 36.0508C69.4478 36.157 70.0262 36.4224 70.4975 36.8469C70.9687 37.2714 71.2998 37.8397 71.4906 38.5519C71.679 39.2551 71.6753 39.9083 71.4794 40.5116C71.2811 41.1058 70.9117 41.6203 70.3711 42.055C69.8306 42.4897 69.1366 42.8206 68.2891 43.0477L65.4087 43.8195L66.1251 42.5985L67.089 46.1956L64.8982 46.7826ZM70.916 45.1702L67.6291 42.3694L69.9685 41.7426L73.2825 44.5361L70.916 45.1702ZM66.1903 42.8419L64.9413 42.0751L67.7 41.3359C68.3761 41.1547 68.8423 40.8752 69.0986 40.4973C69.3525 40.1104 69.4105 39.66 69.2728 39.1462C69.1327 38.6233 68.8572 38.2623 68.4464 38.0632C68.0355 37.8641 67.492 37.8551 66.8159 38.0363L64.0572 38.7754L64.7518 37.4733L66.1903 42.8419ZM74.8424 44.1181L72.3059 34.652L76.6062 33.4997C77.634 33.2244 78.5932 33.1799 79.4838 33.3664C80.372 33.5439 81.1312 33.9251 81.7614 34.5099C82.3915 35.0948 82.8358 35.8695 83.0943 36.8341C83.3504 37.7897 83.3529 38.6828 83.102 39.5134C82.8487 40.335 82.383 41.0492 81.705 41.656C81.0245 42.2538 80.1704 42.6904 79.1427 42.9658L74.8424 44.1181ZM76.5512 41.7325L78.5526 41.1963C79.1836 41.0272 79.6977 40.7638 80.0946 40.4062C80.4982 40.0372 80.767 39.598 80.9011 39.0886C81.0442 38.5768 81.036 38.0234 80.8766 37.4284C80.7147 36.8243 80.4451 36.341 80.0677 35.9783C79.6969 35.6042 79.2457 35.3628 78.7141 35.254C78.1891 35.1338 77.6111 35.1582 76.98 35.3273L74.9786 35.8636L76.5512 41.7325Z" fill="black" />
                    <path d="M52.5739 88.317L50.0374 78.8509L54.1349 77.753C54.9823 77.5259 55.75 77.47 56.4379 77.5852C57.1234 77.6914 57.7018 77.9568 58.1731 78.3813C58.6443 78.8058 58.9754 79.3741 59.1662 80.0863C59.3546 80.7895 59.3509 81.4427 59.155 82.046C58.9592 82.6492 58.5922 83.1727 58.054 83.6165C57.5134 84.0512 56.8194 84.3821 55.972 84.6092L53.0916 85.381L53.8007 84.1329L54.7646 87.73L52.5739 88.317ZM53.866 84.3763L52.6133 83.5959L55.372 82.8567C56.0481 82.6756 56.5143 82.396 56.7706 82.0182C57.0269 81.6403 57.0861 81.1944 56.9485 80.6806C56.8084 80.1577 56.5329 79.7967 56.122 79.5976C55.7111 79.3985 55.1676 79.3895 54.4915 79.5707L51.7328 80.3098L52.4274 79.0077L53.866 84.3763ZM64.043 85.2439L61.9849 77.5628L58.9557 78.3745L58.4774 76.5894L66.7265 74.3791L67.2047 76.1642L64.1756 76.9758L66.2337 84.6568L64.043 85.2439ZM73.5293 82.8759C72.772 83.0788 72.0197 83.1741 71.2724 83.1618C70.5227 83.1405 69.8925 83.0243 69.3818 82.8133L69.6835 80.9642C70.1665 81.1439 70.7083 81.2548 71.309 81.2968C71.9162 81.3273 72.5038 81.2665 73.0718 81.1143C73.5045 80.9984 73.8408 80.8648 74.0805 80.7136C74.3268 80.551 74.4925 80.3761 74.5776 80.1891C74.6628 80.002 74.6788 79.8093 74.6256 79.6109C74.558 79.3585 74.4057 79.1867 74.1687 79.0956C73.9293 78.9955 73.6352 78.9439 73.2865 78.9407C72.9354 78.9285 72.5506 78.9349 72.1322 78.9601C71.7204 78.9738 71.2993 78.9707 70.8688 78.9508C70.4473 78.9284 70.0477 78.8616 69.67 78.7502C69.2923 78.6388 68.9563 78.4487 68.662 78.1797C68.3767 77.9083 68.1664 77.5201 68.0311 77.0153C67.8862 76.4743 67.8988 75.9444 68.0689 75.4253C68.2456 74.8948 68.592 74.4204 69.1079 74.0019C69.6304 73.572 70.338 73.2375 71.2305 72.9983C71.8255 72.8389 72.4308 72.754 73.0464 72.7437C73.6597 72.7243 74.2246 72.7952 74.7412 72.9563L74.5108 74.8008C74.0014 74.6667 73.5101 74.6002 73.0369 74.6014C72.5614 74.5936 72.1117 74.6464 71.688 74.7599C71.2643 74.8735 70.9305 75.0161 70.6866 75.1877C70.4427 75.3593 70.2839 75.542 70.2102 75.7357C70.1341 75.9203 70.1238 76.1164 70.1793 76.3237C70.2446 76.5671 70.3969 76.7389 70.6363 76.839C70.8733 76.9301 71.1661 76.9772 71.5148 76.9804C71.8635 76.9836 72.2438 76.9784 72.6556 76.9646C73.0764 76.9485 73.4964 76.9471 73.9154 76.9604C74.3435 76.9713 74.7464 77.0325 75.1241 77.1439C75.5018 77.2552 75.8333 77.4466 76.1186 77.718C76.4129 77.987 76.6265 78.3694 76.7594 78.8653C76.9019 79.3972 76.8836 79.9239 76.7044 80.4453C76.5253 80.9668 76.1745 81.4425 75.6519 81.8724C75.1384 82.2998 74.4309 82.6344 73.5293 82.8759Z" fill="black" />
                    <path d="M46.2758 73.4446C45.3485 73.6931 44.3808 73.8419 43.3725 73.8912C42.3642 73.9405 41.446 73.8622 40.6178 73.6562L41.2626 69.8807C41.9319 70.0602 42.6045 70.1492 43.2804 70.1475C43.9529 70.133 44.5725 70.0498 45.1391 69.8979C45.6543 69.7599 46.0552 69.5559 46.3417 69.2858C46.6282 69.0158 46.7249 68.7069 46.6317 68.3592C46.58 68.166 46.4772 68.0141 46.3233 67.9035C46.166 67.78 45.9289 67.7193 45.6119 67.7214C45.3079 67.72 44.879 67.7936 44.3252 67.942L40.4035 68.9928L38.8797 60.6012L47.8628 58.1942L48.7842 61.6329L41.4045 63.6103L43.1806 61.0431L44.1777 66.3871L41.356 65.052L44.5049 64.2082C45.8443 63.8493 46.9651 63.7561 47.8671 63.9285C48.782 64.0974 49.5078 64.462 50.0444 65.0222C50.5904 65.5661 50.9704 66.2373 51.1844 67.0358C51.3983 67.8343 51.3847 68.6593 51.1435 69.5107C50.9118 70.3458 50.4008 71.1177 49.6106 71.8263C48.8299 72.5187 47.7183 73.0581 46.2758 73.4446ZM59.4924 69.9032C58.2947 70.2241 57.1579 70.232 56.0823 69.9266C55.0195 69.6178 54.0826 69.0062 53.2715 68.0916C52.4734 67.1735 51.8742 65.9675 51.4739 64.4735C51.0736 62.9796 50.9895 61.6355 51.2217 60.4414C51.4668 59.2439 51.9723 58.2457 52.7383 57.4469C53.5172 56.6446 54.5055 56.083 55.7033 55.7621C56.901 55.4411 58.0313 55.435 59.0941 55.7438C60.1698 56.0492 61.1067 56.6608 61.9048 57.5789C62.7158 58.4935 63.3215 59.6978 63.7218 61.1917C64.1221 62.6857 64.1997 64.0315 63.9547 65.229C63.7225 66.4231 63.217 67.4213 62.4381 68.2236C61.672 69.0224 60.6901 69.5823 59.4924 69.9032ZM58.5141 66.252C58.8103 66.1726 59.0467 65.9989 59.2233 65.7307C59.3999 65.4625 59.4853 65.06 59.4795 64.5232C59.4866 63.983 59.3745 63.2814 59.1433 62.4185C58.9087 61.5428 58.6549 60.8791 58.3821 60.4277C58.1188 59.9599 57.8435 59.6541 57.5565 59.5101C57.2695 59.3662 56.9778 59.3339 56.6816 59.4133C56.3854 59.4926 56.149 59.6664 55.9724 59.9346C55.7958 60.2028 55.7039 60.607 55.6969 61.1472C55.6992 61.6711 55.8177 62.371 56.0524 63.2467C56.2836 64.1096 56.5309 64.775 56.7942 65.2427C57.0705 65.7071 57.3521 66.0112 57.6392 66.1551C57.9262 66.2991 58.2178 66.3314 58.5141 66.252ZM72.8682 66.3192C71.6705 66.6401 70.5337 66.6479 69.4581 66.3426C68.3953 66.0338 67.4584 65.4221 66.6473 64.5075C65.8492 63.5895 65.25 62.3835 64.8497 60.8895C64.4494 59.3955 64.3653 58.0515 64.5975 56.8574C64.8426 55.6598 65.3481 54.6616 66.1141 53.8628C66.893 53.0606 67.8814 52.499 69.0791 52.178C70.2768 51.8571 71.4071 51.851 72.4699 52.1598C73.5456 52.4651 74.4825 53.0768 75.2806 53.9949C76.0917 54.9094 76.6973 56.1137 77.0976 57.6077C77.4979 59.1017 77.5756 60.4474 77.3305 61.645C77.0983 62.8391 76.5928 63.8373 75.8139 64.6396C75.0478 65.4384 74.066 65.9982 72.8682 66.3192ZM71.8899 62.668C72.1861 62.5886 72.4225 62.4148 72.5991 62.1466C72.7757 61.8785 72.8611 61.476 72.8553 60.9392C72.8624 60.3989 72.7503 59.6974 72.5191 58.8345C72.2845 57.9587 72.0307 57.2951 71.7579 56.8437C71.4946 56.3759 71.2194 56.07 70.9323 55.9261C70.6453 55.7821 70.3537 55.7499 70.0574 55.8292C69.7612 55.9086 69.5248 56.0824 69.3482 56.3505C69.1716 56.6187 69.0797 57.0229 69.0727 57.5632C69.075 58.0871 69.1935 58.7869 69.4282 59.6627C69.6594 60.5256 69.9067 61.1909 70.1701 61.6587C70.4463 62.123 70.728 62.4272 71.015 62.5711C71.302 62.7151 71.5937 62.7473 71.8899 62.668Z" fill="black" />
                  </svg>
                </StyledCompassIcon>
              </SwiperSlide>
            </Swiper>
            {/* <StyledSwiperPrevButton
              onClick={() => {
                swiperRef.current && swiperRef.current.slidePrev();
              }}
            >
              {iconRight}
            </StyledSwiperPrevButton>
            <StyledSwiperNextButton
              onClick={() => {
                swiperRef.current && swiperRef.current.slideNext();
              }}
            >
              {iconRight}
            </StyledSwiperNextButton> */}
          </StyledSwiperWrapper>
        </StyledInner>
      </StyledContent>
    </StyledContainer>
  )
  // return loading ? (
  //   <StyledLoadingWrapper>
  //     <Loading size={60} />
  //   </StyledLoadingWrapper>
  // ) : (
  //   <StyledContainer>
  //     <StyledContent>
  //       <StyledRadialBg />
  //       <StyledRadialBg2 />

  //       <StyledInner>
  //         <StyledFlex justifyContent="space-between" style={{ padding: '41px 0 30px' }}>
  //           <StyledFont color="#FFF" fontSize="36px" fontWeight="700" lineHeight="165%">
  //             Odyssey
  //           </StyledFont>
  //           <StyledFlex
  //             gap="8px"
  //             style={{ cursor: 'pointer' }}
  //             onClick={() => {
  //               router.push('/odyssey/homepage');
  //             }}
  //           >
  //             <StyledFont color="#EBF479">Explore all</StyledFont>
  //             <StyledSvg>
  //               <svg xmlns="http://www.w3.org/2000/svg" width="18" height="12" viewBox="0 0 18 12" fill="none">
  //                 <path
  //                   d="M1 5.2C0.558172 5.2 0.2 5.55817 0.2 6C0.2 6.44183 0.558172 6.8 1 6.8L1 5.2ZM17.5657 6.56569C17.8781 6.25327 17.8781 5.74674 17.5657 5.43432L12.4745 0.343147C12.1621 0.0307274 11.6556 0.0307274 11.3431 0.343147C11.0307 0.655566 11.0307 1.1621 11.3431 1.47452L15.8686 6L11.3431 10.5255C11.0307 10.8379 11.0307 11.3444 11.3431 11.6569C11.6556 11.9693 12.1621 11.9693 12.4745 11.6569L17.5657 6.56569ZM1 6.8L17 6.8L17 5.2L1 5.2L1 6.8Z"
  //                   fill="#EBF479"
  //                 />
  //               </svg>
  //             </StyledSvg>
  //           </StyledFlex>
  //         </StyledFlex>
  //         <StyledSwiperWrapper>
  //           <Swiper
  //             width={1244}
  //             modules={[Autoplay]}
  //             slidesPerView={1}
  //             autoplay={{ delay: 113000 }}
  //             speed={1000}
  //             spaceBetween={(size?.width - 1244) / 2 + 100}
  //             updateOnWindowResize={true}
  //             onSwiper={(swiper) => {
  //               swiperRef.current = swiper;
  //             }}
  //             loop={true}
  //           >
  //             {compassList.map((compass: any, index: number) => (
  //               <SwiperSlide key={index}>
  //                 <Card compass={compass} />
  //                 {compass.name === 'THRUSTER TURBO SPIN' ? null : (
  //                   <StyledCompassIcon>
  //                     <CompassIcon />
  //                   </StyledCompassIcon>
  //                 )}

  //                 {/* {odyssey[compass.id]?.reward && (
  //                   <StyledWinPtsIcon>
  //                     <WinPtsIcon num={odyssey[compass.id].reward} />
  //                   </StyledWinPtsIcon>
  //                 )} */}
  //                 {odyssey[compass.id]?.reward && (
  //                   <div
  //                     style={
  //                       compass.name === 'THRUSTER TURBO SPIN'
  //                         ? {
  //                           position: 'absolute',
  //                           right: -27,
  //                           top: -33,
  //                           zIndex: 20,
  //                         }
  //                         : {
  //                           position: 'absolute',
  //                           right: -34,
  //                           top: 0,
  //                           zIndex: 20,
  //                         }
  //                     }
  //                   >
  //                     {['ended', 'un_start'].includes(compass.status) ? (
  //                       <Image src={odyssey[compass.id]?.rewardDisableIcon as string} alt="" width={111} height={111} />
  //                     ) : (
  //                       <Image src={odyssey[compass.id]?.rewardEnableIcon as string} alt="" width={111} height={111} />
  //                     )}
  //                     <StyledFont
  //                       fontSize="18px"
  //                       fontWeight="700"
  //                       lineHeight="150%"
  //                       style={{
  //                         position: 'absolute',
  //                         left: 0,
  //                         right: -8,
  //                         top: odyssey[compass.id]?.rewardTop ? odyssey[compass.id]?.rewardTop : 45,
  //                         textAlign: 'center',
  //                         fontWeight: 900,
  //                         transform: 'rotate(-15deg)',
  //                       }}
  //                     >
  //                       {odyssey[compass.id]?.reward}
  //                     </StyledFont>
  //                   </div>
  //                 )}
  //               </SwiperSlide>
  //             ))}
  //           </Swiper>
  //           <StyledSwiperPrevButton
  //             onClick={() => {
  //               swiperRef.current && swiperRef.current.slidePrev();
  //             }}
  //           >
  //             {iconRight}
  //           </StyledSwiperPrevButton>
  //           <StyledSwiperNextButton
  //             onClick={() => {
  //               swiperRef.current && swiperRef.current.slideNext();
  //             }}
  //           >
  //             {iconRight}
  //           </StyledSwiperNextButton>
  //         </StyledSwiperWrapper>
  //       </StyledInner>
  //     </StyledContent>
  //   </StyledContainer>
  // );
};

export default memo(Compass);
